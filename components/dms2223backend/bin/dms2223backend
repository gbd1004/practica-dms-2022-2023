#!/usr/bin/env python3

import inspect
import os
import dms2223backend
import connexion
import logging
from flask import current_app
from typing import Dict
# from authlib.jose import JsonWebSignature
from flask.logging import default_handler
from dms2223backend.data.config.backendconfiguration import BackendConfiguration
from dms2223backend.service.authservice import AuthService

if __name__ == '__main__':
    cfg: BackendConfiguration = BackendConfiguration()
    cfg.load_from_file(cfg.default_config_file())
    # db: Schema = Schema(cfg)
    # jws: JsonWebSignature = JsonWebSignature()

    cfg.load_from_file(cfg.default_config_file())
    auth_service_cfg: Dict = cfg.get_auth_service()
    auth_service: AuthService = AuthService(
        auth_service_cfg['host'], auth_service_cfg['port'],
        apikey_header='X-ApiKey-Auth',
        apikey_secret=auth_service_cfg['apikey_secret']
    )

    specification_dir = os.path.dirname(
        inspect.getfile(dms2223backend)) + '/openapi'
    app = connexion.FlaskApp(
        __name__,
        specification_dir=specification_dir,
        options={
            "swagger_ui": True,
            "serve_spec": True
        }
    )
    app.add_api("spec.yml", strict_validation=True)
    flask_app = app.app
    with flask_app.app_context():
        # current_app.db = db
        current_app.cfg = cfg
        # current_app.jws = jws

    root_logger = logging.getLogger()
    root_logger.addHandler(default_handler)

    app.run(
        host=cfg.get_service_host(),
        port=cfg.get_service_port(),
        debug=cfg.get_debug_flag(),
        use_reloader=False
    )
